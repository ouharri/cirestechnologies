server:
  port: 9090

logging:
  level:
    root: INFO
    org.springframework.security: DEBUG
    org.springframework.beans.factory: ERROR
    org.springframework.security.web.csrf: DEBUG
    com.hantsylabs: INFO

springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    csrf:
      enabled: true

spring:
  servlet:
    multipart:
      max-file-size: 90MB
      max-request-size: 90MB
  batch:
    jdbc:
      initialize-schema: ALWAYS
      table-prefix: BATCH_
    job:
      enabled: false
  application:
    name: aftas
    admin:
      enabled: true
  cache:
    type: redis
    redis:
      time-to-live: 60000
      cache-null-values: true
  data:
    redis:
      database: 0
      repositories:
        enabled: false
      host: cirestechnologies-cache
      port: ${REDIS_PORT}
  h2:
    console.enabled: true
    console:
      settings:
        trace: false
  docker:
    compose:
      enabled: false
      file: compose.yaml
  datasource:
    url: jdbc:h2:mem:${APP_DB_NAME};DB_CLOSE_ON_EXIT=TRUE
    username: ${APP_DB_USER}
    password: ${APP_DB_PASS}
    driver-class-name: org.h2.Driver
  liquibase:
    change-log: classpath:db/db.changelog-master.yaml
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database: h2

  security:
    oauth2:
      resourceserver:
        opaque-token:
          introspection-uri: https://www.googleapis.com/
          clientId: ${GOOGLE_CLIENT_ID}
          clientSecret: ${GOOGLE_CLIENT_SECRET}
        jwt:
          issuer-uri: https://accounts.google.com
          jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true

application:
  security:
    jwt:
      secret-key: ${JWT_SECRET_KEY}
      expiration: ${JWT_EXPIRATION_TIME}
      refresh-token:
        expiration: ${JWT_REFRESH_EXPIRATION_TIME}